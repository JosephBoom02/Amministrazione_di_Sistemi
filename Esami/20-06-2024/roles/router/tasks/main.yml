---
- name: Copy a new eth1 configuration "interfaces" file into place, after passing validation with ifup
  ansible.builtin.copy:
    src: r1eth1
    dest: /etc/network/interfaces.d/eth1
    validate: /usr/sbin/ifup --no-act -i %s eth1
  notify: Restart Networking

- name: Copy a new eth2 configuration "interfaces" file into place, after passing validation with ifup
  ansible.builtin.copy:
    src: r1eth2
    dest: /etc/network/interfaces.d/eth2
    validate: /usr/sbin/ifup --no-act -i %s eth2
  notify: Restart Networking

- name: Ensure routing is allowed
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    state: present
    line: 'net.ipv4.ip_forward=1'
  notify: Reload sysctl

- name: Install dnsmasq
  ansible.builtin.apt:
    name: dnsmasq
    state: present
    update_cache: true

- name: Configure dnsmasq
  ansible.builtin.copy:
    src: dnsmasq.conf
    dest: /etc/dnsmasq.conf
  notify: Restart dnsmasq

- name: Install snmpd
  ansible.builtin.apt:
    name: [ snmpd, tcpdump ]
    update_cache: true

- name: Copy snmp agent configuration
  ansible.builtin.copy:
    src: snmpd.conf
    dest: '/etc/snmp/snmpd.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Copy snmp agent bash script new-user.sh
  ansible.builtin.copy:
    src: "new-user.sh"
    dest: '/usr/bin/'
    owner: 'vagrant'
    group: 'vagrant'
    mode: '0740'
  notify: Restart snmpd

- name: Enable snmpd at boot
  ansible.builtin.systemd:
    name: snmpd.service
    state: started
    enabled: yes
  notify: Restart snmpd
